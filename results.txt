What I got for min demo
-----------------------
values are:
[ 9 -1  3  0 -2]
   ... vf067fe669a96437cbc818a8a7c943106 energy num_oc. ... is_fea. object.
0  ...                               0.0   -2.0       1 ...    True    -2.0
1  ...                               0.0   -2.0       1 ...    True    -2.0
2  ...                               0.0   -2.0       1 ...    True    -2.0
3  ...                               0.0   -2.0       1 ...    True    -2.0
4  ...                               0.0   -2.0       1 ...    True    -2.0
6  ...                               0.0   -2.0       1 ...    True    -2.0
7  ...                               0.0   -2.0       1 ...    True    -2.0
8  ...                               0.0   -2.0       1 ...    True    -2.0
9  ...                               0.0   -2.0       1 ...    True    -2.0
10 ...                               0.0   -2.0       1 ...    True    -2.0
11 ...                               0.0   -2.0       1 ...    True    -2.0
12 ...                               0.0   -2.0       1 ...    True    -2.0
13 ...                               0.0   -2.0       1 ...    True    -2.0
14 ...                               0.0   -2.0       1 ...    True    -2.0
15 ...                               0.0   -2.0       1 ...    True    -2.0
16 ...                               0.0   -2.0       1 ...    True    -2.0
17 ...                               0.0   -2.0       1 ...    True    -2.0
18 ...                               0.0   -2.0       1 ...    True    -2.0
19 ...                               0.0   -2.0       1 ...    True    -2.0
20 ...                               0.0   -2.0       1 ...    True    -2.0
21 ...                               0.0   -2.0       1 ...    True    -2.0
22 ...                               0.0   -2.0       1 ...    True    -2.0
23 ...                               0.0   -2.0       1 ...    True    -2.0
24 ...                               0.0   -2.0       1 ...    True    -2.0
25 ...                               0.0   -2.0       1 ...    True    -2.0
26 ...                               0.0   -2.0       1 ...    True    -2.0
27 ...                               0.0   -2.0       1 ...    True    -2.0
28 ...                               0.0   -2.0       1 ...    True    -2.0
29 ...                               0.0   -2.0       1 ...    True    -2.0
30 ...                               0.0   -2.0       1 ...    True    -2.0
31 ...                               0.0   -2.0       1 ...    True    -2.0
32 ...                               0.0   -2.0       1 ...    True    -2.0
33 ...                               0.0   -2.0       1 ...    True    -2.0
5  ...                               1.0   -1.0       1 ...    True    -1.0
['INTEGER', 34 rows, 34 samples, 5 variables]


what I got for max demo
-----------------------
values are:
[ 9 -1  3  0 -2]
{'v2252207d9f2f4d11a9ad76f3092bff6d': 0.0, 'v2df3148710654d6e8170041156d5c21e': 0.0, 'v5bc27a94b2814787afbcbd8b1741ad63': 0.0, 'v61da1683941946c1b99c6329540d40b3': 0.0, 'vcc823bc82e2f4b4b98ba97aeb734c9b4': 1.0}
   ... vcc823bc82e2f4b4b98ba97aeb734c9b4 energy num_oc. ... is_fea. object.
0  ...                               1.0   -9.0       1 ...    True    -9.0
1  ...                               1.0   -9.0       1 ...    True    -9.0
2  ...                               1.0   -9.0       1 ...    True    -9.0
3  ...                               1.0   -9.0       1 ...    True    -9.0
4  ...                               1.0   -9.0       1 ...    True    -9.0
5  ...                               1.0   -9.0       1 ...    True    -9.0
6  ...                               1.0   -9.0       1 ...    True    -9.0
7  ...                               1.0   -9.0       1 ...    True    -9.0
8  ...                               1.0   -9.0       1 ...    True    -9.0
9  ...                               1.0   -9.0       1 ...    True    -9.0
10 ...                               1.0   -9.0       1 ...    True    -9.0
11 ...                               1.0   -9.0       1 ...    True    -9.0
12 ...                               1.0   -9.0       1 ...    True    -9.0
13 ...                               1.0   -9.0       1 ...    True    -9.0
14 ...                               1.0   -9.0       1 ...    True    -9.0
15 ...                               1.0   -9.0       1 ...    True    -9.0
16 ...                               1.0   -9.0       1 ...    True    -9.0
17 ...                               1.0   -9.0       1 ...    True    -9.0
18 ...                               1.0   -9.0       1 ...    True    -9.0
19 ...                               1.0   -9.0       1 ...    True    -9.0
20 ...                               1.0   -9.0       1 ...    True    -9.0
21 ...                               1.0   -9.0       1 ...    True    -9.0
22 ...                               1.0   -9.0       1 ...    True    -9.0
23 ...                               1.0   -9.0       1 ...    True    -9.0
24 ...                               1.0   -9.0       1 ...    True    -9.0
25 ...                               1.0   -9.0       1 ...    True    -9.0
['INTEGER', 26 rows, 26 samples, 5 variables]


#what I got for the minimum using aggregate
#data = np.array([9, -1, -2, 0, -2])
#print the objective funtion
BinaryQuadraticModel({'x_0': 9.0, 'x_1': -1.0, 'x_2': -2.0, 'x_3': 0.0, 'x_4': -2.0}, {}, 0.0, 'BINARY')
#print the number of variables in cqm
number of variables for this problem 5
#print all samplest aggregated
all samplest aggregated
  x_0 x_1 x_2 x_3 x_4 energy num_oc. is_sat. is_fea. object.
0 0.0 0.0 0.0 0.0 1.0   -2.0      29 arra...    True    -2.0
1 0.0 0.0 1.0 0.0 0.0   -2.0      24 arra...    True    -2.0
['INTEGER', 2 rows, 53 samples, 5 variables]
#print all feasible samplest aggregated
feasible solutions aggregated
  x_0 x_1 x_2 x_3 x_4 energy num_oc. is_sat. is_fea. object.
0 0.0 0.0 0.0 0.0 1.0   -2.0      29 arra...    True    -2.0
1 0.0 0.0 1.0 0.0 0.0   -2.0      24 arra...    True    -2.0
['INTEGER', 2 rows, 53 samples, 5 variables]


# results for Delaunay 1d, with:
# objective function = max number of edges 
# subject to: sum(length_i)=10
   e_0 e_1 e_2 e_3 e_4 e_5 e_6 e_7 e_8 e_9 energy num_oc. is_sat. is_fea.
4  0.0 0.0 1.0 0.0 1.0 1.0 1.0 0.0 0.0 0.0   -4.0       3 arra...   False
7  0.0 1.0 0.0 0.0 0.0 1.0 1.0 0.0 0.0 1.0   -4.0       1 arra...   False
8  0.0 1.0 1.0 0.0 0.0 0.0 1.0 0.0 0.0 1.0   -4.0       1 arra...   False
11 0.0 0.0 1.0 0.0 0.0 1.0 1.0 0.0 0.0 1.0   -4.0      18 arra...    True
12 0.0 0.0 0.0 1.0 0.0 1.0 1.0 0.0 0.0 1.0   -4.0       1 arra...   False
13 0.0 0.0 1.0 1.0 0.0 1.0 0.0 0.0 0.0 1.0   -4.0       1 arra...   False
14 0.0 0.0 1.0 1.0 0.0 0.0 1.0 0.0 0.0 1.0   -4.0       2 arra...   False
15 1.0 0.0 1.0 1.0 0.0 0.0 0.0 0.0 0.0 1.0   -4.0       1 arra...   False
1  0.0 0.0 0.0 1.0 0.0 0.0 1.0 0.0 0.0 1.0   -3.0       1 arra...   False
2  0.0 0.0 1.0 1.0 0.0 0.0 0.0 0.0 0.0 1.0   -3.0       1 arra...   False
3  0.0 0.0 0.0 0.0 1.0 1.0 1.0 0.0 0.0 0.0   -3.0       3 arra...   False
5  0.0 0.0 1.0 0.0 0.0 0.0 1.0 1.0 0.0 0.0   -3.0       1 arra...   False
9  0.0 0.0 0.0 0.0 0.0 1.0 1.0 1.0 0.0 0.0   -3.0       1 arra...   False
10 1.0 0.0 1.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0   -3.0       2 arra...   False
0  1.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0   -2.0       3 arra...   False
6  1.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0   -2.0       1 arra...   False
['INTEGER', 16 rows, 41 samples, 10 variables]
feasible solutions aggregated
  e_0 e_1 e_2 e_3 e_4 e_5 e_6 e_7 e_8 e_9 energy num_oc. is_sat. is_fea.
0 0.0 0.0 1.0 0.0 0.0 1.0 1.0 0.0 0.0 1.0   -4.0      18 arra...    True


